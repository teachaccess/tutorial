"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[542],{5312:(e,t,n)=>{n.d(t,{ML:()=>d});n(3117),n(102);var a=n(7294),i=n(3905),l=n(4456),o=n(2202),r=n(8120),u=n(4669),s=(n(5935),n(8378)),d=function(e){var t=e.checkExercise,n=e.children,d=void 0===n?"":n,m=a.useState(Math.round(1e5*Math.random()))[0],c=a.useState(),p=(c[0],c[1]),h=a.useState(d),k=h[0],b=h[1],v=a.useRef();a.useEffect((function(){var e=new l.tk({state:r.yy.create({doc:d,extensions:[o.Xy,(0,u.dy)(),l.tk.updateListener.of((function(e){e.docChanged&&b(e.state.doc.toString())}))]}),parent:document.querySelector("#editor-"+m)});p(e)}),[]);var x=(0,i.kt)("div",null,(0,i.kt)("div",{className:"playground-header"},"Live editor"),(0,i.kt)("div",{id:"editor-"+m,className:"npm__react-simple-code-editor__textarea"})),f=(0,i.kt)("div",null,(0,i.kt)("div",{className:"playground-header"},"Result"),(0,i.kt)("div",{id:t?"exercise":"",className:"html-output",ref:v,dangerouslySetInnerHTML:{__html:k}})),g=t&&(0,i.kt)(s.Ep,{checkExercise:function(){return t(v.current)},mdxType:"VerifyButton"});return(0,i.kt)(a.Fragment,null,(0,i.kt)("div",{className:"editor-container"},x,f),g)}},8378:(e,t,n)=>{n.d(t,{Ep:()=>l});n(3117),n(102);var a=n(7294),i=n(3905),l=function(e){var t=e.checkExercise,n=(0,a.useState)(null),l=n[0],o=n[1],r="Well done!",u=function(){var e=t();o(e||r)};return(0,i.kt)("div",{className:"verify"},(0,i.kt)("button",{type:"button",className:"button",onClick:u},"Verify"),function(){if(l){var e=l===r;return(0,i.kt)("div",{className:e?"success":"error",role:"alert"},l)}}())}},8153:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>u,contentTitle:()=>s,metadata:()=>d,toc:()=>m,default:()=>p});var a=n(3117),i=n(102),l=(n(7294),n(3905)),o=n(5312),r=["components"],u={title:"Menus",sidebar_label:"2.9. Menus",id:"menus"},s=void 0,d={unversionedId:"code/menus",id:"code/menus",title:"Menus",description:"Menus, like dialogs, rely on a few key principles to render them usable with",source:"@site/../docs/code/menus.mdx",sourceDirName:"code",slug:"/code/menus",permalink:"/tutorial/code/menus",tags:[],version:"current",lastUpdatedBy:"Rachel Ruderman",lastUpdatedAt:1645081201,formattedLastUpdatedAt:"2/17/2022",frontMatter:{title:"Menus",sidebar_label:"2.9. Menus",id:"menus"},sidebar:"docs",previous:{title:"2.8. Tables",permalink:"/tutorial/code/tables"},next:{title:"2.10. ARIA Introduction",permalink:"/tutorial/code/aria-introduction"}},m=[{value:"Accessible menu",id:"accessible-menu",children:[],level:2},{value:"Exercise: Inaccessible menu",id:"exercise-inaccessible-menu",children:[],level:2}],c={toc:m};function p(e){var t=e.components,n=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Menus, like dialogs, rely on a few key principles to render them usable with\nthe keyboard or screen reader."),(0,l.kt)("h2",{id:"accessible-menu"},"Accessible menu"),(0,l.kt)("p",null,"The example below shows how to apply ARIA attributes to an unordered list element to give it the semantics screen readers need to announce it as a menu. It also demonstrates the JavaScript functionality you need to create the appropriate keyboard interaction."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"You can move focus to the button by pressing ",(0,l.kt)("kbd",null,"tab"),"."),(0,l.kt)("li",{parentName:"ul"},"Pressing ",(0,l.kt)("kbd",null,"enter")," with focus on the button opens the menu and moves focus to the first menu item."),(0,l.kt)("li",{parentName:"ul"},"Up and down arrows navigate the menu."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("kbd",null,"escape")," closes the menu, returning focus to the button."),(0,l.kt)("li",{parentName:"ul"},"If actions were implemented, pressing ",(0,l.kt)("kbd",null,"enter")," on a menu item would perform the action.")),(0,l.kt)(o.ML,{mdxType:"Editor"},'\x3c!-- \'menuExample\' is a global object\n  that contains the behavior\n  methods for the menu interaction. --\x3e\n<div\n  id="popupMenuExample"\n  class="popupMenuWidget"\n  onkeydown="(menuExample.onKeydown.bind(menuExample))(event)"\n  onclick="(menuExample.onClickWidget.bind(menuExample))(event)">\n  <a\n    href="#"\n    role="button"\n    tabindex="0"\n    aria-haspopup="true"\n    aria-owns="actionsMenu"\n    onclick="(menuExample.onClick.bind(menuExample))(event)">Actions &#9660;</a>\n  <ul\n    id="actionsMenu"\n    role="menu"\n    data-open="false"\n    onmouseover="(menuExample.onMouseoverMenuItem.bind(menuExample))(event)"\n    onclick="(menuExample.onClickMenuItem.bind(menuExample))(event)"\n    style="display: none;">\n    <li role="presentation">\n      <a\n        id="action_1"\n        href="#"\n        role="menuitem"\n        tabindex="-1"\n        data-active="false">Create</a>\n    </li>\n    <li role=\'presentation\'>\n      <a\n        id="action_2"\n        href="#"\n        role="menuitem"\n        tabindex="-1"\n        data-active="false">Edit</a>\n    </li>\n    <li role=\'presentation\'>\n      <a\n        id="action_3"\n        href="#"\n        role="menuitem"\n        tabindex="-1"\n        data-active="false">Delete</a>\n    </li>\n  </ul>\n</div>\n  '),(0,l.kt)("h2",{id:"exercise-inaccessible-menu"},"Exercise: Inaccessible menu"),(0,l.kt)("p",null,"Update the example below to include the necessary markup for making this menu accessible. You should address the following issues."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"a")," tag with the ID ",(0,l.kt)("inlineCode",{parentName:"li"},"menuTrigger")," has an associated popup. Therefore, it should be marked up with ",(0,l.kt)("inlineCode",{parentName:"li"},"aria-haspopup")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"aria-owns")," to make this relationship explicit."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"a")," tag with the ID ",(0,l.kt)("inlineCode",{parentName:"li"},"menuTrigger")," should be marked up as a button with the role ",(0,l.kt)("inlineCode",{parentName:"li"},"button"),"."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"a")," tag with the ID ",(0,l.kt)("inlineCode",{parentName:"li"},"menuTrigger")," should be tabbable. Add an explicit ",(0,l.kt)("inlineCode",{parentName:"li"},'tabindex="0"')," to it."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"ul")," tag with the ID ",(0,l.kt)("inlineCode",{parentName:"li"},"actionsMenu")," should be marked up as a menu with the role ",(0,l.kt)("inlineCode",{parentName:"li"},"menu"),"."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"a")," tags inside the ul with the ID ",(0,l.kt)("inlineCode",{parentName:"li"},"actionsMenu")," are menu items. Mark them up with the role ",(0,l.kt)("inlineCode",{parentName:"li"},"menuitem"),"."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"a")," tags inside the ul with the ID ",(0,l.kt)("inlineCode",{parentName:"li"},"actionsMenu")," should not be tabbable. Add an explicit ",(0,l.kt)("inlineCode",{parentName:"li"},'tabindex="-1"')," to each of them.")),(0,l.kt)(o.ML,{checkExercise:function(e){var t=e.querySelector("#popupMenuExampleWithAssertions"),n=t.querySelector("#menuTrigger"),a=t.querySelector("#actionsMenu");return"true"===n.getAttribute("aria-haspopup")?"actionsMenu"===n.getAttribute("aria-owns")?"button"===n.getAttribute("role")?"0"===n.getAttribute("tabIndex")?a.getAttribute(!1)?void 0:'Add the attribute `role="menu"` to the element with the ID `actionsMenu`':'Add the attribute `tabindex="0"` to the element with the ID `menuTrigger`':'Add the attribute `role="button"` to the element with the ID `menuTrigger`':'Add the attribute `aria-owns="actionsMenu"` to the element with the ID `menuTrigger`':'Add the attribute `aria-haspopup="true"` to the element with the ID `menuTrigger`'},mdxType:"Editor"},'\x3c!-- \'menuExample\' is a global object\n  that contains the behavior\n  methods for the menu interaction. --\x3e\n<div\n  id="popupMenuExampleWithAssertions"\n  class="popupMenuWidget"\n  onclick="(menuExample.onClickWidget.bind(menuExample))(event)"\n  onkeydown="(menuExample.onKeydown.bind(menuExample))(event)">\n  <a\n    id="menuTrigger"\n    onclick="(menuExample.onClick.bind(menuExample))(event)">Actions &#9660;</a>\n  <ul\n    id="actionsMenu"\n    data-open="false"\n    onmouseover="(menuExample.onMouseoverMenuItem.bind(menuExample))(event)"\n    onclick="(menuExample.onClickMenuItem.bind(menuExample))(event)"\n    style="display: none;">\n    <li role=\'presentation\'>\n      <a\n        id="action_1"\n        href="#"\n        data-active="false">Create</a>\n    </li>\n    <li role=\'presentation\'>\n      <a\n        id="action_2"\n        href="#"\n        data-active="false">Edit</a>\n    </li>\n    <li role=\'presentation\'>\n      <a\n        id="action_3"\n        href="#"\n        data-active="false">Delete</a>\n    </li>\n  </ul>\n</div>'))}p.isMDXComponent=!0}}]);